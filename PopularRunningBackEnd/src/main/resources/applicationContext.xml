<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd">

    <!-- Component scan to find all Spring components -->
    <context:component-scan base-package="com.popular.running" />

    <!-- Data Source -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
        <property name="url" value="jdbc:hsqldb:file:database/popular-running-db;shutdown=true" />
        <property name="username" value="SA" />
        <property name="password" value="" />
        <property name="initialSize" value="1" />
        <property name="maxActive" value="5" />
        <property name="poolPreparedStatements" value="true" />
        <property name="maxOpenPreparedStatements" value="10" />
    </bean>
    
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean
                class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="HSQL" />
            </bean>
        </property>
    </bean>
    
    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    
    <!--**** Revere Group DAO Setup ****-->
    <!--
            Need one search processor and one metadata util per persistence unit
            (i.e. EntityManagerFactory). We're wiring these to the Generic DAOs
            using an autowire annotation in BaseDAO.
    -->
    <bean id="searchProcessor" class="com.googlecode.genericdao.search.jpa.JPASearchProcessor">
            <constructor-arg ref="metadataUtil" />
    </bean>

    <bean id="metadataUtil" class="com.googlecode.genericdao.search.jpa.hibernate.HibernateMetadataUtil"
            factory-method="getInstanceForEntityManagerFactory">
            <constructor-arg ref="entityManagerFactory" />
    </bean>
    
    <!--**** Application components ****-->
    <bean id="cityService" class="com.popular.running.service.impl.CityServiceImpl" />
    <bean id="distanceService" class="com.popular.running.service.impl.DistanceServiceImpl" />
    <bean id="stateService" class="com.popular.running.service.impl.StateServiceImpl" />
    <bean id="runningEventService" class="com.popular.running.service.impl.RunningEventServiceImpl" />

<!--    <bean id="cityDao" class="com.popular.running.dao.impl.CityDAOImpl" />-->
<!--    <bean id="distanceDao" class="com.popular.running.dao.impl.DistanceDAOImpl" />-->
<!--    <bean id="stateDao" class="com.popular.running.dao.impl.StateDAOImpl" />-->
<!--    <bean id="runningEventDao" class="com.popular.running.dao.impl.RunningEventDAOImpl" />-->
    
    <!--
            Here we define a singleton GeneralDAO. This is optional. Again,
            searchProcessor and PersistenceContext are filled in using
            annotations.
    -->
    <bean id="baseDao" class="com.popular.running.dao.BaseDAO" />

    <!-- Hibernate Session Factory  -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />

        <!-- Hibernate configuration -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">validate</prop>
            </props>
        </property>

        <!-- The packages that contain our Hibernate model classes -->
        <property name="packagesToScan">
            <list>
                <value>com.popular.running.model</value>
            </list>
        </property>

        <!--
        <property name="cacheRegionFactory">
                <bean id="cacheRegionFactory" class="org.hibernate.cache.impl.NoCachingRegionFactory" />
        </property>

        <property name="eventListeners">
                <map></map>
        </property>
        -->

    </bean>
<!--
     Hibernate transaction management -->
<!--    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">-->
<!--        <property name="sessionFactory" ref="sessionFactory"/>-->
<!--    </bean>-->

</beans>